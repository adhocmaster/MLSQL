Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDTRAINING_PROFILE
    BATCH_SIZE
    EPOCH
    FLOAT
    FORMULA
    FORMULA_OPERATOR
    INTEGER
    SUFFLE
    TRAIN
    TRAINING_PROFILE
    WITH

Grammar

Rule 0     S' -> expression
Rule 1     expression -> CREATE MODEL WORD TYPE WORD REGULARIZER WORD DELIMITER
Rule 2     expression -> SQL DELIMITER

Terminals, with rules where they appear

ANDTRAINING_PROFILE  : 
BATCH_SIZE           : 
CREATE               : 1
DELIMITER            : 1 2
EPOCH                : 
FLOAT                : 
FORMULA              : 
FORMULA_OPERATOR     : 
INTEGER              : 
MODEL                : 1
REGULARIZER          : 1
SQL                  : 2
SUFFLE               : 
TRAIN                : 
TRAINING_PROFILE     : 
TYPE                 : 1
WITH                 : 
WORD                 : 1 1 1
error                : 

Nonterminals, with rules where they appear

expression           : 0

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . CREATE MODEL WORD TYPE WORD REGULARIZER WORD DELIMITER
    (2) expression -> . SQL DELIMITER

    CREATE          shift and go to state 2
    SQL             shift and go to state 3

    expression                     shift and go to state 1

state 1

    (0) S' -> expression .



state 2

    (1) expression -> CREATE . MODEL WORD TYPE WORD REGULARIZER WORD DELIMITER

    MODEL           shift and go to state 4


state 3

    (2) expression -> SQL . DELIMITER

    DELIMITER       shift and go to state 5


state 4

    (1) expression -> CREATE MODEL . WORD TYPE WORD REGULARIZER WORD DELIMITER

    WORD            shift and go to state 6


state 5

    (2) expression -> SQL DELIMITER .

    $end            reduce using rule 2 (expression -> SQL DELIMITER .)


state 6

    (1) expression -> CREATE MODEL WORD . TYPE WORD REGULARIZER WORD DELIMITER

    TYPE            shift and go to state 7


state 7

    (1) expression -> CREATE MODEL WORD TYPE . WORD REGULARIZER WORD DELIMITER

    WORD            shift and go to state 8


state 8

    (1) expression -> CREATE MODEL WORD TYPE WORD . REGULARIZER WORD DELIMITER

    REGULARIZER     shift and go to state 9


state 9

    (1) expression -> CREATE MODEL WORD TYPE WORD REGULARIZER . WORD DELIMITER

    WORD            shift and go to state 10


state 10

    (1) expression -> CREATE MODEL WORD TYPE WORD REGULARIZER WORD . DELIMITER

    DELIMITER       shift and go to state 11


state 11

    (1) expression -> CREATE MODEL WORD TYPE WORD REGULARIZER WORD DELIMITER .

    $end            reduce using rule 1 (expression -> CREATE MODEL WORD TYPE WORD REGULARIZER WORD DELIMITER .)

